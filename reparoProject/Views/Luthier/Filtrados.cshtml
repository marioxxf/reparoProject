@{
    List<Business.Luthier> luthiersEncontrados = (List<Business.Luthier>)TempData["luthiersPreparados"];
    List<Business.Luthier> luthiersPreparados = new List<Business.Luthier> { };
    int iterador = 0;

    string instrumentoFiltrado = "";
    string servicoFiltrado = "";
    if (TempData["instrumentoBuscado"] != null)
    {
        instrumentoFiltrado = TempData["instrumentoBuscado"].ToString();
    }

    if (TempData["servicoBuscado"] != null)
    {
        servicoFiltrado = TempData["servicoBuscado"].ToString();
    }

    List<Business.LocalLuthier> locaisDosLuthiersEncontrados = new List<Business.LocalLuthier> { };

    if (luthiersEncontrados != null)
    {
        foreach (var prof in luthiersEncontrados)
        {
            var localDoLuthier = new Business.LocalLuthier().BuscaPorLuthier(prof.id);

            if (localDoLuthier.Count > 0)
            {
                locaisDosLuthiersEncontrados.Add(localDoLuthier[0]);
            }
        }
    }

    int qtdLocais = locaisDosLuthiersEncontrados.Count;
    string latitude = "";
    string longitude = "";

    Dictionary<int, string> nomesPorLuthier = new Dictionary<int, string>();
    int idLuthier = 0;

    if (luthiersEncontrados != null)
    {
        foreach (var luthier in luthiersEncontrados)
        {
            var dadosLuthier = new Business.Luthier().BuscarTodasInfoPorId(luthier.id);
            nomesPorLuthier.Add(luthier.id, dadosLuthier[0].nome);
        }
    }

    string latitudeUsuario = "";
    string longitudeUsuario = "";
    if (TempData["latitudeUsuario"] == null)
    {
    }
    else
    {
        latitudeUsuario = TempData["latitudeUsuario"].ToString();
        latitudeUsuario = latitudeUsuario.Replace(",", ".");
        longitudeUsuario = TempData["longitudeUsuario"].ToString();
        longitudeUsuario = longitudeUsuario.Replace(",", ".");
    }
}

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
      integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
      crossorigin="" />

<!-- Make sure you put this AFTER Leaflet's CSS -->
<script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
        integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
        crossorigin=""></script>

<style>
    #map {
        height: 600px;
    }


</style>

@{
    if (luthiersEncontrados != null)
    {
        <h1>Luthiers encontrados</h1>
        <h3>@instrumentoFiltrado > @servicoFiltrado</h3>
        if (@luthiersEncontrados.Count == 1)
        {
            <small>1 profissional foi encontrado!</small>
            <br />
            <br />
        }
        else
        {
            <small>@luthiersEncontrados.Count profissionais foram encontrados!</small>
            <br />
            <br />
        }

    }
    else
    {
        <h1>Não foram encontrados profissionais...</h1>
    }
}
<input type="text" id="qtdLocais" name="qtdLocais" value="@qtdLocais" style="display:none;" />

@{
    iterador = 1;
    foreach (var local in locaisDosLuthiersEncontrados)
    {
        latitude = local.latitude.ToString().Replace(",", ".");
        longitude = local.longitude.ToString().Replace(",", ".");
        <input type="text" id="local/@iterador" name="local/@iterador" value="[@latitude,@longitude]" style="display:none;" />
        <input type="text" id="nomeLuthier/@iterador" name="nomeLuthier/@iterador" value="@nomesPorLuthier[local.idLuthier]" style="display:none;" />
        <input type="text" id="luthierId/@iterador" name="luthierId/@iterador" value="@local.idLuthier" style="display:none;" />
        iterador = iterador + 1;
    }
}

<table class="table">
    <tr>
        <td><b>Nome do Luthier</b></td>
        <td><b>Usuário desde</b></td>
        <td><b>Pedidos recebidos</b></td>
        <td><b>Acesso ao perfil do profissional</b></td>
    </tr>
    @{
        if (luthiersEncontrados != null)
        {
            foreach (var luthier in luthiersEncontrados)
            {
                var dadosLuthier = new Business.Luthier().BuscarTodasInfoPorId(luthier.id);
                var qtdPedidosDoLuthier = new Business.Pedido().BuscarPedidoPorLuthier(luthier.id);
                var dataCriacao = dadosLuthier[0].dataCriacao.ToString("dd/MM/yyyy");
                <tr>
                    <td>@dadosLuthier[0].nome</td>
                    <td>@dataCriacao</td>
                    <td>@qtdPedidosDoLuthier.Count</td>
                    <td><a target="_blank" href="/luthier/perfil/@luthier.id" class="btn-sm btn-secondary" style="background: #ffd42a; color: #545255; border: white; ">Clique aqui</a></td>
                </tr>
            }
        }
    }
</table>

<h3>Veja aonde está(ão) o(s) luthier(s) disponível(ís) para esse tipo de serviço abaixo</h3>
<br />


<div id="map"></div>

<script>
    var tileLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png',
        {
            attribution: false
        });

    var map = L.map('map',
        {
            zoomControl: true,
            layers: [tileLayer],
            maxZoom: 18,
            minZoom: 1
        })
        .setView(['@latitudeUsuario', '@longitudeUsuario'], 15);

    setTimeout(function () { map.invalidateSize() }, 800);

    jQuery(function ($) {
        $(document).ready(function () {
            if ('@latitudeUsuario'.length > 1) {
                var marcadorX = L.marker(['@latitudeUsuario', '@longitudeUsuario']).addTo(map);
                marcadorX.bindPopup("Você está (aproximadamente) aqui.").openPopup();
            }
            for (i = 1; i <= document.getElementById('qtdLocais').value; i++) {
                var valores = JSON.parse(document.getElementById('local/' + i).value);
                var latitude = valores[0];
                var longitude = valores[1];
                var nomeDoLuthier = document.getElementById('nomeLuthier/' + i).value;
                var perfilDoLuthier = "perfil/" + document.getElementById('luthierId/' + i).value;
                var meIcon = L.icon({
                    iconUrl: '/UploadedFiles/src/lutIcon.png',
                    shadowUrl: '/UploadedFiles/src/lutIcon-shadow.png',

                    iconSize: [38, 95], // size of the icon
                    shadowSize: [50, 64], // size of the shadow
                    iconAnchor: [22, 94], // point of the icon which will correspond to marker's location
                    shadowAnchor: [4, 62],  // the same for the shadow
                    popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor
                });
                var marcador = L.marker([latitude, longitude], {icon: meIcon}).addTo(map);
                console.log(latitude + "," + longitude);
                marcador.bindPopup("<center><b>Luthier: </b>" + nomeDoLuthier + "<br><b>Perfil</b>: <a target='_blank' href='" + perfilDoLuthier + "'>Acesso ao perfil</a></center>").openPopup();
            }
        });
    });
</script>