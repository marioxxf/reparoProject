@{
    string caminhoImg = "";
    string controlaObservacao = "";
    int iteradorCarousel = 0;
    string tipoDaConta = ViewBag.TipoConta.ToString();
    var pedido = ViewBag.Pedido;
    List<Business.ImagemPedido> listaImagens = ViewBag.ImagensDoPedido;
    var luthierResponsavel = ViewBag.LuthierResponsavel;

    var contatosLuthier = new Business.Contato().BuscaContatosDeLuthiersPorId(luthierResponsavel.id);
    string celularLuthier = "";

    foreach (var contato in contatosLuthier)
    {
        if (contato.celular == 1)
        {
            celularLuthier = "55" + contato.codigo + contato.numero;
        }
    }

    var instrumento = new Business.Instrumento();
    if (ViewBag.Instrumento.Count > 0)
    {
        instrumento = ViewBag.Instrumento[0];
    }

    var servicoDoPedido = new Business.Servico();
    if (ViewBag.Servico.Count > 0)
    {
        servicoDoPedido = ViewBag.Servico[0];
    }

    var statusPedido = new Business.StatusPedido();
    if (ViewBag.StatusPedido.Count > 0)
    {
        statusPedido = ViewBag.StatusPedido[0];
    }

    var todosEstadosDePedido = new Business.StatusPedido().Listar();

    var clienteDoPedido = new Business.Cliente();
    if (ViewBag.ClienteResponsavel.Count > 0)
    {
        clienteDoPedido = ViewBag.ClienteResponsavel[0];
    }

    /*Habilidade-Serviço
    Dictionary<int, string> servicoPorHabilidade = new Dictionary<int, string>();
    Dictionary<int, string> instrumentoPorHabilidade = new Dictionary<int, string>();
    int idDaHab = 0;
    int idDoServico = 0;
    int idDoInstrumentoDaHab = 0;
    foreach (var skill in habilidades)
    {
        idDoServico = skill.idServico;
        idDaHab = skill.id;
        foreach (var service in todosServicos)
        {
            if (idDoServico == service.id)
            {
                servicoPorHabilidade.Add(idDaHab, service.descricao);
            }
        }
    }
    // Habilidade-Instrumento
    foreach (var habs in habilidades)
    {
        idDoInstrumentoDaHab = habs.idInstrumento;
        idDaHab = habs.id;
        foreach (var inst in instrumentos)
        {
            if (idDoInstrumentoDaHab == inst.id)
            {
                instrumentoPorHabilidade.Add(idDaHab, inst.nome);
            }
        }
    }*/

    //Coletando o número de celular do cliente dono do pedido
    var contatosCliente = new Business.Contato().BuscaContatosDeClientesPorId(luthierResponsavel.id);
    string celularCliente = "";

    foreach (var contato in contatosLuthier)
    {
        if (contato.celular == 1)
        {
            celularCliente = "55" + contato.codigo + contato.numero;
        }
    }
}
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<style>
    .swal-button {
        padding: 7px 19px;
        border-radius: 2px;
        background-color: #ffd42a;
        font-size: 16px;
        border: #ffd42a;
        text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.3);
    }

    .carousel-control-prev-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E") !important;
    }

    .carousel-control-next-icon {
        background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23ffffff'  viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E") !important;
    }
</style>

@{
    if (luthierResponsavel.id == Convert.ToInt32(ViewBag.IdLuthierLogado) || clienteDoPedido.id == Convert.ToInt32(ViewBag.IdClienteLogado))
    {
        <h1>
            Status do pedido: @if (ViewBag.StatusPedido.Count > 0)
            {
                @statusPedido.descricao
            }
            else
            {
                <label>Desconhecido</label>
            }
        </h1>

        if (ViewBag.StatusPedido.Count > 0 && statusPedido.descricao == "Finalizado")
        {
            if (clienteDoPedido.id == Convert.ToInt32(ViewBag.IdClienteLogado) && Convert.ToDouble(pedido.avaliacao) <= 0)
            {
                <label>Que tal avaliar o trabalho e atendimento de @luthierResponsavel.nome? É só clicar <a style="color:blueviolet" id="lblModalAvalia" name="lblModalAvalia" onclick="abrirModalAvalia()">aqui</a> e seguir os passos. <span style='font-size:35px;'>&#9996;</span></label>
            }
        }
        string textoWppParaLuthier = "Olá, eu sou " + clienteDoPedido.nome + ", dono do pedido " + pedido.id + " no Réparo.";
        string textoWppParaCliente = "Olá, eu sou " + luthierResponsavel.nome + ", luthier responsável pelo seu pedido (Nº" + pedido.id + "), no Réparo.";

        if (luthierResponsavel.id == Convert.ToInt32(ViewBag.IdLuthierLogado))
        {
            <h3>Fale com o Cliente (dono do pedido) via WhatsApp</h3>
            <a href="https://wa.me/@celularCliente?text=@textoWppParaCliente" target="_blank" class="btn btn-secondary" style="width: 300px; background: #ffd42a; color: rgba(0,0,0,.5); border: white;">Abrir conversa</a>
            <br />
        }
        else
        {
            <h3>Fale com o Luthier (responsável pelo pedido) via WhatsApp</h3>
            <a href="https://wa.me/@celularLuthier?text=@textoWppParaLuthier" target="_blank" class="btn btn-secondary" style="width: 300px; background: #ffd42a; color: rgba(0,0,0,.5); border: white;">Abrir conversa</a>
            <br />
        }
        <hr class="my-4" />
        <h3>Informações do pedido</h3>

        <table class="table">
            <tr>
                <td><b>ID do pedido</b></td>
                <td><b>Cliente solicitante</b></td>
                <td><b>Luthier responsável</b></td>
                <td><b>Descrição da situação</b></td>
                <td><b>Data de emissão do pedido</b></td>
                <td><b>Data da última atualização do Luthier</b></td>
                <td><b>Endereço registrado para entrega</b></td>
                <td><b>Status do pedido</b></td>
                <td><b>Instrumento alvo</b></td>
                <td><b>Serviço solicitado</b></td>
                <td><b>Avaliação do pedido</b></td>
            </tr>
            @if (pedido.id != null && pedido.idCliente != null && pedido.idLuthier != null)
            {
                <tr>
                    <td>@pedido.id</td>
                    <td>@clienteDoPedido.nome</td>
                    <td><a style="color: #E1BE34 " href="/luthier/perfil/@luthierResponsavel.id">@luthierResponsavel.nome</a></td>
                    <td>@pedido.descricao</td>
                    <td>@pedido.dataEmissao</td>
                    <td>
                        @if (@pedido.dataUltAtualiza == DateTime.MinValue)
                        {
                            <label>Ainda não foi feita uma atualização por parte do Luthier</label>
                        }
                        else
                        {
                            @pedido.dataUltAtualiza
                        }
                    </td>
                    <td>@pedido.enderecoEntrega</td>
                    <td>
                        @if (ViewBag.StatusPedido.Count > 0)
                        {
                            @statusPedido.descricao
                        }
                        else
                        {
                            <label>Desconhecido</label>
                        }
                    </td>
                    <td>
                        @if (ViewBag.Instrumento.Count > 0)
                        {
                            @instrumento.nome;
                        }
                        else
                        {
                            <label>Desconhecido</label>
                        }
                    </td>
                    <td>@servicoDoPedido.descricao</td>
                    <td>@pedido.avaliacao</td>
                </tr>
            }
        </table>

        <br />

        <div style="margin-bottom: 10px;">
            <div style="float:right;">
                <h3>Imagens do pedido</h3>
                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @{
                            iteradorCarousel = 0;

                            foreach (var img in listaImagens)
                            {
                                caminhoImg = "/../../UploadedFiles/reqPhotos/" + img.nomeImagem;
                                if (iteradorCarousel == 0)
                                {
                                    <li data-target="#carouselExampleIndicators" data-slide-to="@iteradorCarousel" class="active"></li>
                                }
                                else if (iteradorCarousel != 0)
                                {
                                    <li data-target="#carouselExampleIndicators" data-slide-to="@iteradorCarousel"></li>
                                }
                                iteradorCarousel = iteradorCarousel + 1;
                            }
                        }
                    </ol>
                    <div class="carousel-inner">

                        @{
                            iteradorCarousel = 0;

                            foreach (var img in listaImagens)
                            {
                                caminhoImg = "/../../UploadedFiles/reqPhotos/" + img.nomeImagem;
                                if (iteradorCarousel == 0)
                                {
                                    <div class="carousel-item active">
                                        <img width="500px" height="500px" src="@caminhoImg" alt="First slide">
                                    </div>
                                }
                                else if (iteradorCarousel != 0)
                                {
                                    <div class="carousel-item">
                                        <img width="500px" height="500px" src="@caminhoImg" alt="Second slide">
                                    </div>
                                }
                                iteradorCarousel = iteradorCarousel + 1;
                            }
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
            <div style="float:left;">
                @{
                    if (tipoDaConta == "Luthier")
                    {
                        <h3>Alterar status do pedido</h3>
                        if (statusPedido.descricao != "Finalizado")
                        {
                            <select onchange="alteraStatus(this.value)" class="form-select" style="color: black; width: 1800px" id="selStatus" name="selStatus">
                                <option id="optionDefaultDois" name="optionDefaultDois">Selecione</option>
                                @foreach (var s in todosEstadosDePedido)
                                {
                                    if (s.descricao == "Em análise pelo Luthier responsável" && statusPedido.descricao == "O Luthier está trabalhando no pedido")
                                    {
                                    }
                                    else if (s.descricao == statusPedido.descricao || s.descricao == "Aguardando primeira resposta do Luthier")
                                    {
                                    }
                                    else
                                    {
                                        <option style="color: rgba(0,0,0,.5);" id="txtStatus/@s.id" name="txtStatus/@s.id" value="@s.id">
                                            @s.descricao
                                        </option>
                                    }

                                }
                            </select><br /><br />
                        }
                        else
                        {
                            <label>O pedido já foi finalizado, não há mais o que atualizar! &#128516;</label>
                        }

                        <h3>Criar nova observação</h3>

                        if (statusPedido.descricao == "Finalizado")
                        {
                            controlaObservacao = "disabled";
                        }
                        <div class="form-group">
                            <label style="color: black;">Qual é a observação que precisa ser feita?</label>
                            <textarea @controlaObservacao class="form-control" id="txtObs" name="txtObs" rows="3"></textarea>
                        </div>
                        <input @controlaObservacao onclick="adicionarObs()" class="btn btn-primary" style="background: darkseagreen; color: white; border: white; " type="button" id="btnUpload" value="Adicionar observação" /><br /><br />
                    }
                }
                <h3>Observações do Luthier</h3>
                <table class="table">
                    <tr>
                        <td><b>Observação</b></td>
                        <td><b>Data da criação da observação</b></td>
                    </tr>
                    @{
                        if (ViewBag.ObservacoesPedido.Count > 0)
                        {
                            foreach (var obs in ViewBag.ObservacoesPedido)
                            {
                                <tr>
                                    <td>@obs.conteudo</td>
                                    <td>@obs.dataCriacao</td>
                                </tr>
                            }
                        }
                    }
                </table>
            </div>
        </div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        <br /><label></label>
    }
    else
    {
        if (tipoDaConta == "Luthier")
        {
            <center>
                <h1>Luthier, você não foi responsabilizado por esse pedido, portanto, não pode ter acesso a esse conteúdo.</h1>
                <img width="50%" height="50%" src="~/UploadedFiles/src/erro.png" />
            </center>
        }
        else if (tipoDaConta == "Cliente")
        {
            <center>
                <h1>Cliente, você não tem acesso às informações desse pedido porque não é o autor dele.</h1>
                <img width="50%" height="50%" src="~/UploadedFiles/src/erro.png" />
            </center>
        }

    }
}

<button style="display:none;" type="button" class="btn btn-primary" id="btnModalAvalia" name="btnModalAvalia" data-toggle="modal" data-target="#modalAvalia">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="modalAvalia" name="modalAvalia" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Avalie o trabalho de @luthierResponsavel.nome</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label style="color: black;">Insira sua avaliação do trabalho e atendimento do Luthier</label><span style="color: red; margin-left: 2px;">*</span>
                    <small id="emailHelp" class="form-text text-muted">Escolha um número de 0 a 10 e confirme a avaliação</small>
                    <input type="text" class="form-control" id="txtAvaliacao" name="txtAvaliacao" placeholder="Insira apenas números">
                </div><br />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-primary" onclick="avaliarLuthier()" style="background-color: #ffd42a; border-color: #ffd42a ">Confirmar avaliação</button>
            </div>
        </div>
    </div>
</div>


<script>
    function adicionarObs() {
        var conteudo = document.getElementById('txtObs').value;
        var pedidoId = '@pedido.id';
        var luthierId = '@luthierResponsavel.id';

        var data = JSON.stringify({
            'conteudo': conteudo,
            'idPedido': pedidoId,
            'idLuthier': luthierId
        });

        var id = 0;

        if (conteudo.length < 5) {
            swal("Tem algo de errado...", "Para criar uma nova observação, você deve escrever um pouco mais.", "error");
        }
        else {
            $.ajax(
            {
                type: 'POST',
                dataType: 'JSON',
                url: '@Url.Action("AdicionarObs", "Pedido")' + '/' + id,
                data: { 'conteudo': conteudo, 'idPedido': pedidoId, 'idLuthier': luthierId },
                success:
                    function (response) {
                        console.log(response);
                        swal({
                            title: "Boa, comunicação é tudo!",
                            text: "Observação adicionada com sucesso!",
                            icon: "success",
                            buttons: false
                        });
                        setTimeout(function () {
                            location.reload();
                        }, 4500);
                    },
                error:
                    function (response) {
                        alert("Error: " + response);
                    }
            });
        }
    }

    function lesgo(valor) {
        console.log(valor);
    }

    function alteraStatus(idStatus) {
        var pedidoId = '@pedido.id';
        var statusId = idStatus;
        var id = 0;
        $.ajax(
            {
                type: 'POST',
                dataType: 'JSON',
                url: '@Url.Action("AtualizaStatus", "Pedido")' + '/' + id,
                data: { 'idPedido': pedidoId, 'idStatus': statusId },
                success:
                    function (response) {
                        console.log(response);
                        swal({
                            title: "Excelente, o cliente será notificado!",
                            text: "Silêncio e trabalho!",
                            icon: "success",
                            buttons: false
                        });
                        setTimeout(function () {
                            location.reload();
                        }, 4500);
                    },
                error:
                    function (response) {
                        alert("Error: " + response);
                    }
            });
    }

    function abrirModalAvalia() {
        document.getElementById('btnModalAvalia').click();
    }

    function avaliarLuthier() {
        var avaliacao = document.getElementById('txtAvaliacao').value;
        var idPedido = '@pedido.id';
        var id = 0;
        avaliacao = avaliacao.replace(",", ".");

        if (parseFloat(avaliacao) > 0 && parseFloat(avaliacao) <= 10) {
            $.ajax(
                {
                    type: 'POST',
                    dataType: 'JSON',
                    url: '@Url.Action("AvaliarPedido", "Pedido")' + '/' + id,
                    data: { 'idPedido': idPedido, 'avaliacao': avaliacao },
                    success:
                        function (response) {
                            console.log(response);
                            swal({
                                title: "Feedback é sempre importante!",
                                text: "Sua avaliação foi computada com sucesso.",
                                icon: "success",
                                buttons: false
                            });
                            setTimeout(function () {
                                location.reload();
                            }, 4500);
                        },
                    error:
                        function (response) {
                            alert("Error: " + response);
                        }
                });
        }
        else {
            swal({
                title: "Opa, calma aí...",
                text: "A sua nota para o desempenho de @luthierResponsavel.nome precisa estar entre 0,1 e 10.",
                icon: "error",
                buttons: false
            });
            document.getElementById('txtAvaliacao').value = "";
        }

        console.log("Número do pedido: " + '@pedido.id' + "\nAvaliação: " + document.getElementById('txtAvaliacao').value);
    }
</script>